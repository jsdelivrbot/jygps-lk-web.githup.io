<template>
  <div>
    <el-button @click="open1" v-show="false">消息</el-button>
    <!-- <el-button :plain="true" @click="open2">成功</el-button>
    <el-button :plain="true" @click="open3">暂无数据</el-button>
    <el-button :plain="true" @click="open4">错误</el-button> -->
    <section>
      <!--工具条-->
      <el-col :span="24" class="toolbar" style="padding-bottom: 0px;">
        <el-form :inline="true" :model="filters" class="demo-form-inline">
          <el-form-item label="冷库列表">
            <el-select v-model="select" filterable placeholder="请选择">
              <el-option v-for="item in oprations" :key="item.index" :label="item.name" :value="item.id" ref="dataInfo">
              </el-option>
            </el-select>
          </el-form-item>
          <el-form-item label="时间区间">
            <div class="block">
              <el-date-picker v-model="value1" type="datetime" value-format="yyyy-MM-dd" placeholder="选择开始日期时间">
              </el-date-picker>
            </div>
          </el-form-item>
          <el-form-item label="-">
            <div class="block">
              <el-date-picker v-model="value2" type="datetime" value-format="yyyy-MM-dd" placeholder="选择结束日期时间">
              </el-date-picker>
            </div>
          </el-form-item>
          <el-form-item>
            <!-- 查询 -->
            <el-button type="primary" @click="getUserst">查询</el-button>
            <el-button :plain="false" @click="open8" v-show="false"></el-button>
          </el-form-item>
          <el-form-item style="float:right;cursor: pointer;">
            <i>
              <img src="../../assets/icon/pdf.png" width="20" height="14">
            </i>
            <span type="primary" style="color:#328fea;">Pdf</span>
          </el-form-item>
          <el-form-item style="float:right;cursor: pointer;">
            <i>
              <img src="../../assets/icon/excel.png" width="20" height="14">
            </i>
            <a style="color:#328fea;" :href="['http://114.55.138.209:8091/jygpsTmp/erpbasicguest/exportExcel'+'?guestName='+encodeURI(QguestName)+'&guestStyleName='+encodeURI(Qvalue4)+'&guestAddress='+encodeURI(QguestAddress)+'&guestAttachName='+encodeURI(Qvalue3)+'&createTime='+encodeURI(QguestRegisterTime)+'&createTime2='+encodeURI(QguestRegisterTime2)]">Excel</a>
          </el-form-item>
        </el-form>
      </el-col>
      <!-- 列表-新加了一个id用于PDF导出 -->
      <el-table-column prop="nodename" label="节点名称" width="150" fixed="left" :show-overflow-tooltip="true">
      </el-table-column>
      <template>
        <section class="chart-container chart1-container" :style={height:liuHeights}>
          <el-row style="margin: 2% 0 0 0" v-if="xianshi">
            <el-col :span="8" style="position:relative" v-if="allnode[0]">
              <div class="jump_info" @click="jump_info(1)">
                <img src="../../assets/icon/lishi.png" width="20" alt="列表详情">
              </div>
              <div id="chart1" style="margin:0 auto;;width:96%;height:200px;border: 1px solid #C7C7C7;"></div>
            </el-col>
            <el-col :span="8" style="position:relative" v-if="allnode[1]">
              <div class="jump_info" @click="jump_info(2)">
                <img src="../../assets/icon/lishi.png" width="20" alt="列表详情">
              </div>
              <div id="chart2" style="margin:0 auto;width:96%;height:200px;border: 1px solid #C7C7C7;"></div>
            </el-col>
            <el-col :span="8" style="position:relative" v-if="allnode[2]">
              <div class="jump_info" @click="jump_info(3)">
                <img src="../../assets/icon/lishi.png" width="20" alt="列表详情">
              </div>
              <div id="chart3" style="margin:0 auto;width:96%;height:200px;border: 1px solid #C7C7C7;"></div>
            </el-col>
          </el-row>
          <el-row style="margin: 1% 0" v-if="xianshi">
            <el-col :span="8" style="position:relative" v-if="allnode[3]">
              <div class="jump_info" @click="jump_info(4)">
                <img src="../../assets/icon/lishi.png" width="20" alt="列表详情">
              </div>
              <div id="chart4" style="margin:0 auto;;width:96%;height:200px;border: 1px solid #C7C7C7;"></div>
            </el-col>
            <el-col :span="8" style="position:relative" v-if="allnode[4]">
              <div class="jump_info" @click="jump_info(5)">
                <img src="../../assets/icon/lishi.png" width="20" alt="列表详情">
              </div>
              <div id="chart5" style="margin:0 auto;width:96%;height:200px;border: 1px solid #C7C7C7;"></div>
            </el-col>
            <el-col :span="8" style="position:relative" v-if="allnode[5]">
              <div class="jump_info" @click="jump_info(6)">
                <img src="../../assets/icon/lishi.png" width="20" alt="列表详情">
              </div>
              <div id="chart6" style="margin:0 auto;width:96%;height:200px;border: 1px solid #C7C7C7;"></div>
            </el-col>
          </el-row>
          <el-row v-if="xianshi">
            <el-col :span="8" style="position:relative" v-if="allnode[6]">
              <div class="jump_info" @click="jump_info(7)">
                <img src="../../assets/icon/lishi.png" width="20" alt="列表详情">
              </div>
              <div id="chart7" style="margin:0 auto;;width:96%;height:200px;border: 1px solid #C7C7C7;"></div>
            </el-col>
            <el-col :span="8" style="position:relative" v-if="allnode[7]">
              <div class="jump_info" @click="jump_info(8)">
                <img src="../../assets/icon/lishi.png" width="20" alt="列表详情">
              </div>
              <div id="chart8" style="margin:0 auto;width:96%;height:200px;border: 1px solid #C7C7C7;"></div>
            </el-col>
            <el-col :span="8" style="position:relative" v-if="allnode[8]">
              <div class="jump_info" @click="jump_info(9)">
                <img src="../../assets/icon/lishi.png" width="20" alt="列表详情">
              </div>
              <div id="chart9" style="margin:0 auto;width:96%;height:200px;border: 1px solid #C7C7C7;"></div>
            </el-col>
          </el-row>
          <el-row style="margin: 1% 0" v-if="allnode[7]">
            <el-col :span="8" style="position:relative" v-if="allnode[9]">
              <div class="jump_info" @click="jump_info(10)">
                <img src="../../assets/icon/lishi.png" width="20" alt="列表详情">
              </div>
              <div id="chart10" style="margin:0 auto;;width:96%;height:200px;border: 1px solid #C7C7C7;"></div>
            </el-col>
            <el-col :span="8" style="position:relative" v-if="allnode[10]">
              <div class="jump_info" @click="jump_info(11)">
                <img src="../../assets/icon/lishi.png" width="20" alt="列表详情">
              </div>
              <div id="chart11" style="margin:0 auto;width:96%;height:200px;border: 1px solid #C7C7C7;"></div>
            </el-col>
            <el-col :span="8" style="position:relative" v-if="allnode[11]">
              <div class="jump_info" @click="jump_info(12)">
                <img src="../../assets/icon/lishi.png" width="20" alt="列表详情">
              </div>
              <div id="chart12" style="margin:0 auto;width:96%;height:200px;border: 1px solid #C7C7C7;"></div>
            </el-col>
          </el-row>
        </section>
      </template>
      <!-- 弹出开始 -->
      <div class="content" v-if="newadds">
        <div class="delet" @click="delet">X</div>
        <div class="contenter">
          <el-table :data="all_node" highlight-current-row :height="530" style="border-right:solid 1px #dfe6ec;height:300px;overflow: hidden;"
            @selection-change="handleSelectionChange">
            <el-table-column type="selection" width="55" label="全选/取消">
            </el-table-column>
            <el-table-column prop="nodeName" label="节点名称" width="100">
            </el-table-column>
            <el-table-column prop="temperature1" label="温度" width="100">
            </el-table-column>
            <el-table-column prop="hum" label="湿度" min-width="100" :show-overflow-tooltip="true">
            </el-table-column>
            <el-table-column prop="gpsTime" label="记录时间" min-width="380" :show-overflow-tooltip="true" sortable>
            </el-table-column>
            <el-table-column prop="installPos" label="安装位置" min-width="380" :show-overflow-tooltip="true">
            </el-table-column>
          </el-table>
          <el-footer class="footer-fenye">
            <!--工具条-->
            <el-col :span="24" class="toolbar-bot">
              <span class="demonstration" style="margin-top: 10px;">共:{{total}}条</span>
              <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="currentPage1" :page-size="size"
                layout="prev, pager, next, jumper" :total="total">
              </el-pagination>
            </el-col>
          </el-footer>
        </div>
      </div>
      <!-- 弹出结束 -->
    </section>
  </div>
</template>

<script>
  var liuHeight = (document.documentElement.clientHeight - 180) + 'px';
  import util from "../../common/js/util";
  import axios from "axios";
  import echarts from "echarts";
  import {
    getUserListPage,
    removeUser,
    batchRemoveUser,
    editUser,
    addUser,
    history,
    allNode,
    unitTree,
    newhistory,
    exportPdf
  } from "../../api/api";
  export default {
    data() {
      return {
        pdfUrl: "",
        tmp1min: "",
        tmp2min: "",
        tmp3min: "",
        tmp4min: "",
        tmp5min: "",
        tmp6min: "",
        tmp7min: "",
        tmp8min: "",
        tmp9min: "",
        tmp10min: "",
        tmp12min: "",
        tmp1max: "",
        tmp2max: "",
        tmp3max: "",
        tmp4max: "",
        tmp5max: "",
        tmp6max: "",
        tmp7max: "",
        tmp8max: "",
        tmp9max: "",
        tmp10max: "",
        tmp11max: "",
        tmp12max: "",
        hum1min: "",
        hum2min: "",
        hum3min: "",
        hum4min: "",
        hum5min: "",
        hum6min: "",
        hum7min: "",
        hum8min: "",
        hum9min: "",
        hum10min: "",
        hum12min: "",
        hum1max: "",
        hum2max: "",
        hum3max: "",
        hum4max: "",
        hum5max: "",
        hum6max: "",
        hum7max: "",
        hum8max: "",
        hum9max: "",
        hum10max: "",
        hum11max: "",
        hum12max: "",
        allinfo: [],
        liuHeights: "",
        newadds: false,
        xianshi: false,
        all_node: [],
        num: "",
        // echart图
        myChart1: null,
        myChart2: null,
        myChart3: null,
        myChart4: null,
        myChart5: null,
        myChart6: null,
        myChart7: null,
        myChart8: null,
        myChart9: null,
        jiedianid: [],
        a: [],
        allnodedetail: [],
        // myChart: [],
        allnum: [],
        label: "",
        value: "",
        value1: "",
        value2: "",
        value3: "2018-07-16 18:00",
        value4: "2018-07-22 18:00",
        filters: {
          name: ""
        },
        select: "",
        allnode: [],
        oprations: [],
        users: [],
        currentPage1: 1,
        total: 0,
        page: 1,
        size: 15,
        listLoading: false,
        sels: [], //列表选中列
        editLoading: false,
        startTime: "",
        endTime: "",
        vehicleId: ""
      }
    },
    beforeCreate() {},
    // created() {

    // },
    // beforeMount() {},
    //  beforeUpdate () {
    //   this.getUserst()
    // },
    //echart图
    mounted: function () {
      this.liuHeights = liuHeight
      // 第1个echarts图
      this.listLoading=true
      allNode().then(data => {
        this.listLoading=false
        if (data.data.code == -1) {
          this.$message({
            message: msg,
            type: "error"
          });
        } else {
          this.$nextTick(() => {
            this.allnode = data.data.msg;
            this.getUsers();
          })
        }
      })
      // let para={
      //   page:1,
      //   size:15,
      //   unitId:this.oprations[0].id
      // }
      // console.log(this.oprations[0].id)
      // newhistory(para).then(data => {
      //   if (data.code == -1) {
      //     this.$message({
      //       message: msg,
      //       type: "error"
      //     });
      //   } else {
      //     this.$nextTick(() => {
      //       this.allinfo=data
      //       console.log(this.allinfo)
      //       // this.allnode = data.data.msg;
      //       // this.getUsers();
      //     })
      //   }
      // });





      // 第二个echarts图
      // 第三个echarts图
      // 第四个echarts图
      // 第5个echarts图
      // 第6个echarts图
      // 第7个echarts图
      // 第8个echarts图
      // 第9个echarts图

      /*ECharts图表*/
    },

    created: function () {
      this.listLoading=true
      unitTree().then(data => {
        this.listLoading=false
        if (data.data.code == -1) {
          this.$message({
            message: msg,
            type: "error"
          });
        } else {

          this.oprations = data.data.msg;

          console.log(this.oprations[0].id)

        }
      });
      this.sysUserName = ruleForm2.account

    },
    methods: {
      open1() {
        this.$message({
          message: '暂无数据',
          type: 'warning'
        });
      },
      handleSizeChange(val) {
        // alert(`每页 ${val} 条`);
        this.size = val;
        this.jump_info(this.num);
      },
      handleCurrentChange(val) {
        this.page = val;
        this.jump_info(this.num);
      },
      // 第一个echarts图
      displayEchart1(data) {
        this.myChart1 = echarts.init(document.getElementById("chart1"));
        var tmp1Array = [];
        var tmp0max = tmp1Array[1];
        var tmp0min = tmp1Array[1];
        var hum0max = tmp1Array[1];
        var hum0min = tmp1Array[1];
        var timeArray = [];
        var hum1Array = [];
        //  console.log("data=",hum2Array);
        var flag = true;
        for (var i = 0; i < data.length; i++) {
          if (data[i].temperature1) {
            tmp1Array[i] = data[i].temperature1;
            // if(tem)
          } else {
            tmp1Array[i] = "";
          }
          //湿度1
          if (data[i].hum) {
            hum1Array[i] = data[i].hum;
          } else {
            hum1Array[i] = "";
          }
          timeArray[i] = data[i].gpsTime;
          // 最大温度
          if (tmp0max > tmp1Array[i]) {
            tmp0max = tmp0max;
          } else {
            tmp0max = tmp1Array[i]
          }
          // 最小温度
          if (tmp0min < tmp1Array[i]) {
            tmp0min = tmp0min;
          } else {
            tmp0min = tmp1Array[i]
          }
          // 最大湿度
          if (hum0max > hum1Array[i]) {
            hum0max = hum0max;
          } else {
            hum0max = hum1Array[i]
          }
          // 最小湿度
          if (hum0min < hum1Array[i]) {
            hum0min = hum0min;
          } else {
            hum0min = hum1Array[i]
          }
        };
        this.tmp1max = tmp0max
        this.tmp1min = tmp0min
        this.hum1max = hum0max
        this.hum1min = hum0min
        var hum1 = {
          name: "湿度一",
          type: "line",
          data: hum1Array,
          itemStyle: {
            normal: {
              color: "#F9BF66",
              lineStyle: {
                color: "#F9BF66"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
          // ,
          // markLine: {
          //   data: [{ type: "average", name: "平均值" }]
          // }
        };
        var tmp1 = {
          name: "温度一",
          type: "line",
          data: tmp1Array,
          itemStyle: {
            normal: {
              opacity: 0,
              color: "#60A0E6",
              lineStyle: {
                color: "#60A0E6"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
          // ,
          // markLine:{
          //   data: [{ type: "average", name: "平均值" }]
          // }
        };
        const option = {
          title: {
            text: '▌' + this.allnode[0].name,
            textStyle: {
              fontSize: 13,
              fontWeight: 'normal',
              color: '#60A0E6'
            }
          },
          tooltip: {
            trigger: "axis"
          },
          legend: {
            data: ["温度一", "湿度一"]
          },
          toolbox: {
            show: true,
            feature: {
              // saveAsImage: {}
            }
          },
          xAxis: [{
            type: "category",
            boundaryGap: false,
            data: (function () {
              var list = [];
              for (var i = 0; i < data.length; i++) {
                list.push(data[i].gpsTime);
              }
              return list;
            })()
          }],
          yAxis: [{
              type: "value",
              name: "（°C）",
              min: this.tmp1min,
              max: this.tmp1max,
              interval: 2,
              axisLabel: {
                formatter: "{value} "
              }
            },
            {
              type: "value",
              name: "（%）",
              min: 0,
              max: 100,
              interval: 20,
              axisLabel: {
                formatter: "{value} "
              }
            }
          ],

          series: [tmp1, hum1]
        };
        this.myChart1.setOption(option);
      },
      drawChart1() {

        var that = this;
        let para = {
          size: this.size,
          page: this.page,
          startTime: this.value3,
          endTime: this.value4,
          vehicleId: this.allnode[0].id,
          unitId: this.oprations[0].id

        };
        //查询的结果
        this.listLoading=true
        history(para).then(res => {
          this.listLoading=false
          var data = res.msg.data;
          if (res.code == 1) {
            this.total = res.msg.total;
            this.displayEchart1(data);
          } else {
            this.open1()
          }
        });
      },
      drawCharts1() {
        this.displayEchart1();
      },
      // 第二个echarts图
      displayEchart2(data) {
        this.myChart2 = echarts.init(document.getElementById("chart2"));
        var tmp1Array = [];
        var tmp0max = tmp1Array[1];
        var tmp0min = tmp1Array[1];
        var hum0max = tmp1Array[1];
        var hum0min = tmp1Array[1];
        var timeArray = [];
        var hum1Array = [];
        var flag = true;
        for (var i = 0; i < data.length; i++) {
          if (data[i].temperature1) {
            tmp1Array[i] = data[i].temperature1;
          } else {
            tmp1Array[i] = "";
          }
          //湿度1
          if (data[i].hum) {
            hum1Array[i] = data[i].hum;
          } else {
            hum1Array[i] = "";
          }
          timeArray[i] = data[i].gpsTime;
          // 最大温度
          if (tmp0max > tmp1Array[i]) {
            tmp0max = tmp0max;
          } else {
            tmp0max = tmp1Array[i]
          }
          // 最小温度
          if (tmp0min < tmp1Array[i]) {
            tmp0min = tmp0min;
          } else {
            tmp0min = tmp1Array[i]
          }
          // 最大湿度
          if (hum0max > hum1Array[i]) {
            hum0max = hum0max;
          } else {
            hum0max = hum1Array[i]
          }
          // 最小湿度
          if (hum0min < hum1Array[i]) {
            hum0min = hum0min;
          } else {
            hum0min = hum1Array[i]
          }
        };
        this.tmp2max = tmp0max
        this.tmp2min = tmp0min
        this.hum2max = hum0max
        this.hum2min = hum0min
        var hum1 = {
          name: "湿度一",
          type: "line",
          data: hum1Array,
          itemStyle: {
            normal: {
              color: "#F9BF66",
              lineStyle: {
                color: "#F9BF66"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
          // ,
          // markLine: {
          //   data: [{ type: "average", name: "平均值" }]
          // }
        };
        var tmp1 = {
          name: "温度一",
          type: "line",
          data: tmp1Array,
          itemStyle: {
            normal: {
              opacity: 0,
              color: "#60A0E6",
              lineStyle: {
                color: "#60A0E6"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
        };
        const option2 = {
          title: {
            text: '▌' + this.allnode[1].name,
            textStyle: {
              fontSize: 13,
              fontWeight: 'normal',
              color: '#60A0E6'
            }
          },
          tooltip: {
            trigger: "axis"
          },
          legend: {
            data: ["温度一", "湿度一"]
          },
          toolbox: {
            show: true,
            feature: {
              // saveAsImage: {}
            }
          },
          xAxis: [{
            type: "category",
            boundaryGap: false,
            data: (function () {
              var list = [];
              for (var i = 0; i < data.length; i++) {
                list.push(data[i].gpsTime);
              }
              return list;
            })()
          }],
          yAxis: [{
              type: "value",
              name: "（°C）",
              min: this.tmp2min,
              max: this.tmp2max,
              interval: 2,
              axisLabel: {
                formatter: "{value} "
              }
            },
            {
              type: "value",
              name: "（%）",
              min: 0,
              max: 100,
              interval: 20,
              axisLabel: {
                formatter: "{value} "
              }
            }
          ],

          series: [tmp1, hum1]
        };
        // console.log(allnodedd);
        //  console.log(option)
        this.myChart2.setOption(option2);
        // console.log(this.allnodedd)

      },
      drawChart2() {
        var that = this;
        let para = {
          size: 15,
          page: 1,
          startTime: this.value3,
          endTime: this.value4,
          vehicleId: this.allnode[1].id
        };
        //查询的结果
        this.listLoading=true
        history(para).then(res => {
          this.listLoading=false
          var data = res.msg.data;

          if (res.code == 1) {
            this.total = res.msg.total;
            this.displayEchart2(data);
          } else {
            this.open1()
          }
        });
      },
      drawCharts2() {
        this.displayEchart2();
      },
      // 第三个echarts图
      displayEchart3(data) {
        this.myChart3 = echarts.init(document.getElementById("chart3"));
        var tmp1Array = [];
        var tmp0max = tmp1Array[1];
        var tmp0min = tmp1Array[1];
        var hum0max = tmp1Array[1];
        var hum0min = tmp1Array[1];
        var timeArray = [];
        var hum1Array = [];
        var flag = true;
        for (var i = 0; i < data.length; i++) {
          if (data[i].temperature1) {
            tmp1Array[i] = data[i].temperature1;
          } else {
            tmp1Array[i] = "";
          }
          //湿度1
          if (data[i].hum) {
            hum1Array[i] = data[i].hum;
          } else {
            hum1Array[i] = "";
          }
          timeArray[i] = data[i].gpsTime;
          // 最大温度
          if (tmp0max > tmp1Array[i]) {
            tmp0max = tmp0max;
          } else {
            tmp0max = tmp1Array[i]
          }
          // 最小温度
          if (tmp0min < tmp1Array[i]) {
            tmp0min = tmp0min;
          } else {
            tmp0min = tmp1Array[i]
          }
          // 最大湿度
          if (hum0max > hum1Array[i]) {
            hum0max = hum0max;
          } else {
            hum0max = hum1Array[i]
          }
          // 最小湿度
          if (hum0min < hum1Array[i]) {
            hum0min = hum0min;
          } else {
            hum0min = hum1Array[i]
          }
        };
        this.tmp3max = tmp0max
        this.tmp3min = tmp0min
        this.hum3max = hum0max
        this.hum3min = hum0min
        var hum1 = {
          name: "湿度一",
          type: "line",
          data: hum1Array,
          itemStyle: {
            normal: {
              color: "#F9BF66",
              lineStyle: {
                color: "#F9BF66"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
          // ,
          // markLine: {
          //   data: [{ type: "average", name: "平均值" }]
          // }
        };
        var tmp1 = {
          name: "温度一",
          type: "line",
          data: tmp1Array,
          itemStyle: {
            normal: {
              opacity: 0,
              color: "#60A0E6",
              lineStyle: {
                color: "#60A0E6"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
        };
        const option3 = {
          title: {
            text: '▌' + this.allnode[2].name,
            textStyle: {
              fontSize: 13,
              fontWeight: 'normal',
              color: '#60A0E6'
            }
          },
          tooltip: {
            trigger: "axis"
          },
          legend: {
            data: ["温度一", "湿度一"]
          },
          toolbox: {
            show: true,
            feature: {
              // saveAsImage: {}
            }
          },
          xAxis: [{
            type: "category",
            boundaryGap: false,
            data: (function () {
              var list = [];
              for (var i = 0; i < data.length; i++) {
                list.push(data[i].gpsTime);
              }
              return list;
            })()
          }],
          yAxis: [{
              type: "value",
              name: "（°C）",
              min: this.tmp3min,
              max: this.tmp3max,
              interval: 2,
              axisLabel: {
                formatter: "{value} "
              }
            },
            {
              type: "value",
              name: "（%）",
              min: 0,
              max: 100,
              interval: 20,
              axisLabel: {
                formatter: "{value} "
              }
            }
          ],

          series: [tmp1, hum1]
        };
        // console.log(allnodedd);
        //  console.log(option)
        this.myChart3.setOption(option3);
        // console.log(this.allnodedd)

      },
      drawChart3() {
        var that = this;
        let para = {
          size: 15,
          page: 1,
          startTime: this.value3,
          endTime: this.value4,
          vehicleId: this.allnode[2].id
        };
        //查询的结果
        this.listLoading=true
        history(para).then(res => {
          this.listLoading=false
          var data = res.msg.data;

          if (res.code == 1) {
            this.total = res.msg.total;
            // alert(this.total);
            this.displayEchart3(data);
            // alert(data);
            // console.log(res.msg);
          } else {
            this.open1()
            // alert("暂无数据");
          }
        });
      },
      drawCharts3() {
        this.displayEchart3();
      },
      // 第四个echarts图
      displayEchart4(data) {
        this.myChart4 = echarts.init(document.getElementById("chart4"));
        var tmp1Array = [];
        var tmp0max = tmp1Array[1];
        var tmp0min = tmp1Array[1];
        var hum0max = tmp1Array[1];
        var hum0min = tmp1Array[1];
        var timeArray = [];
        var hum1Array = [];
        var flag = true;
        for (var i = 0; i < data.length; i++) {
          if (data[i].temperature1) {
            tmp1Array[i] = data[i].temperature1;
          } else {
            tmp1Array[i] = "";
          }
          //湿度1
          if (data[i].hum) {
            hum1Array[i] = data[i].hum;
          } else {
            hum1Array[i] = "";
          }
          timeArray[i] = data[i].gpsTime;
          // 最大温度
          if (tmp0max > tmp1Array[i]) {
            tmp0max = tmp0max;
          } else {
            tmp0max = tmp1Array[i]
          }
          // 最小温度
          if (tmp0min < tmp1Array[i]) {
            tmp0min = tmp0min;
          } else {
            tmp0min = tmp1Array[i]
          }
          // 最大湿度
          if (hum0max > hum1Array[i]) {
            hum0max = hum0max;
          } else {
            hum0max = hum1Array[i]
          }
          // 最小湿度
          if (hum0min < hum1Array[i]) {
            hum0min = hum0min;
          } else {
            hum0min = hum1Array[i]
          }
        };
        this.tmp4max = tmp0max
        this.tmp4min = tmp0min
        this.hum4max = hum0max
        this.hum4min = hum0min
        var hum1 = {
          name: "湿度一",
          type: "line",
          data: hum1Array,
          itemStyle: {
            normal: {
              color: "#F9BF66",
              lineStyle: {
                color: "#F9BF66"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
          // ,
          // markLine: {
          //   data: [{ type: "average", name: "平均值" }]
          // }
        };
        var tmp1 = {
          name: "温度一",
          type: "line",
          data: tmp1Array,
          itemStyle: {
            normal: {
              opacity: 0,
              color: "#60A0E6",
              lineStyle: {
                color: "#60A0E6"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
        };
        const option4 = {
          title: {
            text: '▌' + this.allnode[3].name,
            textStyle: {
              fontSize: 13,
              fontWeight: 'normal',
              color: '#60A0E6'
            }
          },
          tooltip: {
            trigger: "axis"
          },
          legend: {
            data: ["温度一", "湿度一"]
          },
          toolbox: {
            show: true,
            feature: {
              // saveAsImage: {}
            }
          },
          xAxis: [{
            type: "category",
            boundaryGap: false,
            data: (function () {
              var list = [];
              for (var i = 0; i < data.length; i++) {
                list.push(data[i].gpsTime);
              }
              return list;
            })()
          }],
          yAxis: [{
              type: "value",
              name: "（°C）",
              min: this.tmp4min,
              max: this.tmp4max,
              interval: 2,
              axisLabel: {
                formatter: "{value} "
              }
            },
            {
              type: "value",
              name: "（%）",
              min: 0,
              max: 100,
              interval: 20,
              axisLabel: {
                formatter: "{value} "
              }
            }
          ],

          series: [tmp1, hum1]
        };
        // console.log(allnodedd);
        //  console.log(option)
        this.myChart4.setOption(option4);
        // console.log(this.allnodedd)

      },
      drawChart4() {
        var that = this;
        let para = {
          size: 15,
          page: 1,
          startTime: this.value3,
          endTime: this.value4,
          vehicleId: this.allnode[3].id
        };
        //查询的结果
        this.listLoading=true
        history(para).then(res => {
          this.listLoading=false
          var data = res.msg.data;
          if (res.code == 1) {
            this.total = res.msg.total;
            this.displayEchart4(data);
          } else {
            this.open1()
          }
        });
      },
      drawCharts4() {
        this.displayEchart4();
      },
      // 第5个echarts图
      displayEchart5(data) {
        this.myChart5 = echarts.init(document.getElementById("chart5"));
        var tmp1Array = [];
        var tmp0max = tmp1Array[1];
        var tmp0min = tmp1Array[1];
        var hum0max = tmp1Array[1];
        var hum0min = tmp1Array[1];
        var timeArray = [];
        var hum1Array = [];
        var flag = true;
        for (var i = 0; i < data.length; i++) {
          if (data[i].temperature1) {
            tmp1Array[i] = data[i].temperature1;
          } else {
            tmp1Array[i] = "";
          }
          //湿度1
          if (data[i].hum) {
            hum1Array[i] = data[i].hum;
          } else {
            hum1Array[i] = "";
          }
          timeArray[i] = data[i].gpsTime;
          // 最大温度
          if (tmp0max > tmp1Array[i]) {
            tmp0max = tmp0max;
          } else {
            tmp0max = tmp1Array[i]
          }
          // 最小温度
          if (tmp0min < tmp1Array[i]) {
            tmp0min = tmp0min;
          } else {
            tmp0min = tmp1Array[i]
          }
          // 最大湿度
          if (hum0max > hum1Array[i]) {
            hum0max = hum0max;
          } else {
            hum0max = hum1Array[i]
          }
          // 最小湿度
          if (hum0min < hum1Array[i]) {
            hum0min = hum0min;
          } else {
            hum0min = hum1Array[i]
          }
        };
        this.tmp5max = tmp0max
        this.tmp5min = tmp0min
        this.hum5max = hum0max
        this.hum5min = hum0min
        var hum1 = {
          name: "湿度一",
          type: "line",
          data: hum1Array,
          itemStyle: {
            normal: {
              color: "#F9BF66",
              lineStyle: {
                color: "#F9BF66"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
          // ,
          // markLine: {
          //   data: [{ type: "average", name: "平均值" }]
          // }
        };
        var tmp1 = {
          name: "温度一",
          type: "line",
          data: tmp1Array,
          itemStyle: {
            normal: {
              opacity: 0,
              color: "#60A0E6",
              lineStyle: {
                color: "#60A0E6"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
        };
        const option5 = {
          title: {
            text: '▌' + this.allnode[4].name,
            textStyle: {
              fontSize: 13,
              fontWeight: 'normal',
              color: '#60A0E6'
            }
          },
          tooltip: {
            trigger: "axis"
          },
          legend: {
            data: ["温度一", "湿度一"]
          },
          toolbox: {
            show: true,
            feature: {
              // saveAsImage: {}
            }
          },
          xAxis: [{
            type: "category",
            boundaryGap: false,
            data: (function () {
              var list = [];
              for (var i = 0; i < data.length; i++) {
                list.push(data[i].gpsTime);
              }
              return list;
            })()
          }],
          yAxis: [{
              type: "value",
              name: "（°C）",
              min: this.tmp5min,
              max: this.tmp5max,
              interval: 2,
              axisLabel: {
                formatter: "{value} "
              }
            },
            {
              type: "value",
              name: "（%）",
              min: 0,
              max: 100,
              interval: 20,
              axisLabel: {
                formatter: "{value} "
              }
            }
          ],

          series: [tmp1, hum1]
        };
        // console.log(allnodedd);
        //  console.log(option)
        this.myChart5.setOption(option5);
        // console.log(this.allnodedd)

      },
      drawChart5() {
        var that = this;
        let para = {
          size: 15,
          page: 1,
          startTime: this.value3,
          endTime: this.value4,
          vehicleId: this.allnode[4].id
        };
        //查询的结果
        this.listLoading=true
        history(para).then(res => {
          this.listLoading=false
          var data = res.msg.data;
          if (res.code == 1) {
            this.total = res.msg.total;
            this.displayEchart5(data);
          } else {
            this.open1()
          }
        });
      },
      drawCharts5() {
        this.displayEchart5();
      },
      // 第6个echarts图
      displayEchart6(data) {
        this.myChart6 = echarts.init(document.getElementById("chart6"));
        var tmp1Array = [];
        var tmp0max = tmp1Array[1];
        var tmp0min = tmp1Array[1];
        var hum0max = tmp1Array[1];
        var hum0min = tmp1Array[1];
        var timeArray = [];
        var hum1Array = [];
        var flag = true;
        for (var i = 0; i < data.length; i++) {
          if (data[i].temperature1) {
            tmp1Array[i] = data[i].temperature1;
          } else {
            tmp1Array[i] = "";
          }
          // 湿度1
          if (data[i].hum) {
            hum1Array[i] = data[i].hum;
          } else {
            hum1Array[i] = "";
          }
          timeArray[i] = data[i].gpsTime;
          // 最大温度
          if (tmp0max > tmp1Array[i]) {
            tmp0max = tmp0max;
          } else {
            tmp0max = tmp1Array[i]
          }
          // 最小温度
          if (tmp0min < tmp1Array[i]) {
            tmp0min = tmp0min;
          } else {
            tmp0min = tmp1Array[i]
          }
          // 最大湿度
          if (hum0max > hum1Array[i]) {
            hum0max = hum0max;
          } else {
            hum0max = hum1Array[i]
          }
          // 最小湿度
          if (hum0min < hum1Array[i]) {
            hum0min = hum0min;
          } else {
            hum0min = hum1Array[i]
          }
        };
        this.tmp6max = tmp0max
        this.tmp6min = tmp0min
        this.hum6max = hum0max
        this.hum6min = hum0min
        var hum1 = {
          name: "湿度一",
          type: "line",
          data: hum1Array,
          itemStyle: {
            normal: {
              color: "#F9BF66",
              lineStyle: {
                color: "#F9BF66"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
          // ,
          // markLine: {
          //   data: [{ type: "average", name: "平均值" }]
          // }
        };
        var tmp1 = {
          name: "温度一",
          type: "line",
          data: tmp1Array,
          itemStyle: {
            normal: {
              opacity: 0,
              color: "#60A0E6",
              lineStyle: {
                color: "#60A0E6"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
        };
        const option6 = {
          title: {
            text: '▌' + this.allnode[5].name,
            textStyle: {
              fontSize: 13,
              fontWeight: 'normal',
              color: '#60A0E6'
            }
          },
          tooltip: {
            trigger: "axis"
          },
          legend: {
            data: ["温度一", "湿度一"]
          },
          toolbox: {
            show: true,
            feature: {
              // saveAsImage: {}
            }
          },
          xAxis: [{
            type: "category",
            boundaryGap: false,
            data: (function () {
              var list = [];
              for (var i = 0; i < data.length; i++) {
                list.push(data[i].gpsTime);
              }
              return list;
            })()
          }],
          yAxis: [{
              type: "value",
              name: "（°C）",
              min: this.tmp6min,
              max: this.tmp6max,
              interval: 2,
              axisLabel: {
                formatter: "{value} "
              }
            },
            {
              type: "value",
              name: "（%）",
              min: 0,
              max: 100,
              interval: 20,
              axisLabel: {
                formatter: "{value} "
              }
            }
          ],

          series: [tmp1, hum1]
        };
        // console.log(allnodedd);
        //  console.log(option)
        this.myChart6.setOption(option6);
        // console.log(this.allnodedd)

      },
      drawChart6() {
        var that = this;
        let para = {
          size: 15,
          page: 1,
          startTime: this.value3,
          endTime: this.value4,
          vehicleId: this.allnode[5].id
        };
        //查询的结果
        this.listLoading=true
        history(para).then(res => {
          this.listLoading=false
          var data = res.msg.data;
          if (res.code == 1) {
            this.total = res.msg.total;
            this.displayEchart6(data);
          } else {
            this.open1()
          }
        });
      },
      drawCharts6() {
        this.displayEchart6();
      },
      // 第7个echarts图
      displayEchart7(data) {
        this.myChart7 = echarts.init(document.getElementById("chart7"));
        var tmp1Array = [];
        var tmp0max = tmp1Array[1];
        var tmp0min = tmp1Array[1];
        var hum0max = tmp1Array[1];
        var hum0min = tmp1Array[1];
        var timeArray = [];
        var hum1Array = [];
        var flag = true;
        for (var i = 0; i < data.length; i++) {
          if (data[i].temperature1) {
            tmp1Array[i] = data[i].temperature1;
          } else {
            tmp1Array[i] = "";
          }
          //湿度1
          if (data[i].hum) {
            hum1Array[i] = data[i].hum;
          } else {
            hum1Array[i] = "";
          }
          timeArray[i] = data[i].gpsTime;
          // 最大温度
          if (tmp0max > tmp1Array[i]) {
            tmp0max = tmp0max;
          } else {
            tmp0max = tmp1Array[i]
          }
          // 最小温度
          if (tmp0min < tmp1Array[i]) {
            tmp0min = tmp0min;
          } else {
            tmp0min = tmp1Array[i]
          }
          // 最大湿度
          if (hum0max > hum1Array[i]) {
            hum0max = hum0max;
          } else {
            hum0max = hum1Array[i]
          }
          // 最小湿度
          if (hum0min < hum1Array[i]) {
            hum0min = hum0min;
          } else {
            hum0min = hum1Array[i]
          }
        };
        this.tmp7max = tmp0max
        this.tmp7min = tmp0min
        this.hum7max = hum0max
        this.hum7min = hum0min
        var hum1 = {
          name: "湿度一",
          type: "line",
          data: hum1Array,
          itemStyle: {
            normal: {
              color: "#F9BF66",
              lineStyle: {
                color: "#F9BF66"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
          // ,
          // markLine: {
          //   data: [{ type: "average", name: "平均值" }]
          // }
        };
        var tmp1 = {
          name: "温度一",
          type: "line",
          data: tmp1Array,
          itemStyle: {
            normal: {
              opacity: 0,
              color: "#60A0E6",
              lineStyle: {
                color: "#60A0E6"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
        };
        const option7 = {
          title: {
            text: '▌' + this.allnode[6].name,
            textStyle: {
              fontSize: 13,
              fontWeight: 'normal',
              color: '#60A0E6'
            }
          },
          tooltip: {
            trigger: "axis"
          },
          legend: {
            data: ["温度一", "湿度一"]
          },
          toolbox: {
            show: true,
            feature: {
              // saveAsImage: {}
            }
          },
          xAxis: [{
            type: "category",
            boundaryGap: false,
            data: (function () {
              var list = [];
              for (var i = 0; i < data.length; i++) {
                list.push(data[i].gpsTime);
              }
              return list;
            })()
          }],
          yAxis: [{
              type: "value",
              name: "（°C）",
              min: this.tmp7min,
              max: this.tmp7max,
              interval: 2,
              axisLabel: {
                formatter: "{value} "
              }
            },
            {
              type: "value",
              name: "（%）",
              min: 0,
              max: 100,
              interval: 20,
              axisLabel: {
                formatter: "{value} "
              }
            }
          ],

          series: [tmp1, hum1]
        };
        // console.log(allnodedd);
        //  console.log(option)
        this.myChart7.setOption(option7);
        // console.log(this.allnodedd)

      },
      drawChart7() {
        var that = this;
        let para = {
          size: 15,
          page: 1,
          startTime: this.value3,
          endTime: this.value4,
          vehicleId: this.allnode[6].id
        };
        //查询的结果
        this.listLoading=true
        history(para).then(res => {
          this.listLoading=false
          var data = res.msg.data;
          if (res.code == 1) {
            this.total = res.msg.total;
            this.displayEchart7(data);
          } else {
            this.open1()
          }
        });
      },
      drawCharts7() {
        this.displayEchart7();
      },
      // 第8个echarts图
      displayEchart8(data) {
        this.myChart8 = echarts.init(document.getElementById("chart8"));
        var tmp1Array = [];
        var timeArray = [];
        var tmp0max = tmp1Array[1];
        var tmp0min = tmp1Array[1];
        var hum0max = tmp1Array[1];
        var hum0min = tmp1Array[1];
        var hum1Array = [];
        var flag = true;
        for (var i = 0; i < data.length; i++) {
          if (data[i].temperature1) {
            tmp1Array[i] = data[i].temperature1;
          } else {
            tmp1Array[i] = "";
          }
          //湿度1
          if (data[i].hum) {
            hum1Array[i] = data[i].hum;
          } else {
            hum1Array[i] = "";
          }
          timeArray[i] = data[i].gpsTime;
          // 最大温度
          if (tmp0max > tmp1Array[i]) {
            tmp0max = tmp0max;
          } else {
            tmp0max = tmp1Array[i]
          }
          // 最小温度
          if (tmp0min < tmp1Array[i]) {
            tmp0min = tmp0min;
          } else {
            tmp0min = tmp1Array[i]
          }
          // 最大湿度
          if (hum0max > hum1Array[i]) {
            hum0max = hum0max;
          } else {
            hum0max = hum1Array[i]
          }
          // 最小湿度
          if (hum0min < hum1Array[i]) {
            hum0min = hum0min;
          } else {
            hum0min = hum1Array[i]
          }
        };
        this.tmp8max = tmp0max
        this.tmp8min = tmp0min
        this.hum8max = hum0max
        this.hum8min = hum0min
        var hum1 = {
          name: "湿度一",
          type: "line",
          data: hum1Array,
          itemStyle: {
            normal: {
              color: "#F9BF66",
              lineStyle: {
                color: "#F9BF66"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
          // ,
          // markLine: {
          //   data: [{ type: "average", name: "平均值" }]
          // }
        };
        var tmp1 = {
          name: "温度一",
          type: "line",
          data: tmp1Array,
          itemStyle: {
            normal: {
              opacity: 0,
              color: "#60A0E6",
              lineStyle: {
                color: "#60A0E6"
              }
            }
          },
          markPoint: {
            data: [{
                type: "max",
                name: "最大值"
              },
              {
                type: "min",
                name: "最小值"
              }
            ]
          }
        };
        const option8 = {
          title: {
            text: '▌' + this.allnode[7].name,
            textStyle: {
              fontSize: 13,
              fontWeight: 'normal',
              color: '#60A0E6'
            }
          },
          tooltip: {
            trigger: "axis"
          },
          legend: {
            data: ["温度一", "湿度一"]
          },
          toolbox: {
            show: true,
            feature: {
              // saveAsImage: {}
            }
          },
          xAxis: [{
            type: "category",
            boundaryGap: false,
            data: (function () {
              var list = [];
              for (var i = 0; i < data.length; i++) {
                list.push(data[i].gpsTime);
              }
              return list;
            })()
          }],
          yAxis: [{
              type: "value",
              name: "（°C）",
              min: this.tmp8min,
              max: this.tmp8max,
              interval: 2,
              axisLabel: {
                formatter: "{value} "
              }
            },
            {
              type: "value",
              name: "（%）",
              min: 0,
              max: 100,
              interval: 20,
              axisLabel: {
                formatter: "{value} "
              }
            }
          ],

          series: [tmp1, hum1]
        };
        // console.log(allnodedd);
        //  console.log(option)
        this.myChart8.setOption(option8);
        // console.log(this.allnodedd)

      },
      drawChart8() {
        var that = this;
        let para = {
          size: this.size,
          page: this.page,
          startTime: this.value3,
          endTime: this.value4,
          vehicleId: this.allnode[7].id
        };
        //查询的结果
        this.listLoading=true
        history(para).then(res => {
          this.listLoading=false
          var data = res.msg.data;
          if (res.code == 1) {
            this.total = res.msg.total;
            this.displayEchart8(data);
          } else {
            this.open1()
          }
        });
      },
      drawCharts8() {
        this.displayEchart8();
      },
      // 第9个echarts图
      // 第10个echarts图
      getUsers() {
        this.xianshi = true
        this.drawChart1();
        this.drawChart2();
        this.drawChart3();
        this.drawChart4();
        this.drawChart5();
        this.drawChart6();
        this.drawChart7();
        this.drawChart8();
        this.drawChart9();
        this.drawChart10();
        this.drawChart11();
        this.drawChart12();

      },
      open8() {
        this.$message({
          showClose: true,
          message: '开始时间要小于结束时间',
          type: 'warning'
        })
      },
      getUserst() {
        var that = this
        if (this.value1 > this.value2) {
          this.open8()
        }
        that.value1 = !that.value1 || that.value1 == "" ?
          "" :
          util.formatDate.format(new Date(that.value1), "yyyy-MM-dd hh:mm");
        that.value2 = !that.value2 || that.value2 == "" ?
          "" :
          util.formatDate.format(new Date(that.value2), "yyyy-MM-dd hh:mm");
        this.value3 = this.value1
        this.value4 = this.value2
        this.drawChart1();
        this.drawChart2();
        this.drawChart3();
        this.drawChart4();
        this.drawChart5();
        this.drawChart6();
        this.drawChart7();
        this.drawChart8();
        this.drawChart9();
        this.drawChart10();
        this.drawChart11();
        this.drawChart12();

      },

      jump_info(index) {
        this.newadds = true;
        var that = this;
        this.num = index;
        let para = {
          size: this.size,
          page: this.page,
          startTime: this.value3,
          endTime: this.value4,
          vehicleId: this.allnode[index - 1].id
        };
        this.listLoading=true
        history(para).then(res => {
          this.listLoading=false
          var data = res.msg.data;
          if (res.code == 1) {
            this.total = res.msg.total;
            this.displayEchart1(data);
            this.all_node = res.msg.data
            console.log(res.msg.data);
          } else {
            this.open1()
          }
        });
      },
      delet() {
        this.newadds = false;
      },
    }
  };
</script>
<style scoped>
  .footer-fenye {
    position: absolute;
    padding: 0 1% 10px 1%;
    bottom: 0;
    left: 0;
    width: 98%;
    background: #fff;
    z-index: 100;
  }

  .chart-container {
    width: 100%;
    float: left;
  }

  .chart1-container {
    /* height:560px; */
    overflow-y: scroll;
    overflow-x: hidden;
  }

  .el-col {
    background: #fff;
  }

  .toolbar {
    box-shadow: 0 0 6px 0 #dcdfe6;
  }

  .newadd {
    position: absolute;
    left: 0px;
    top: 0px;
  }

  .content {
    position: absolute;
    top: 0px;
    right: 0px;
    z-index: 999;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.568);
  }

  .contenter {
    overflow: scroll;
    position: relative;
    width: 85%;
    height: 600px;
    background: #fff;
    margin: 40px 0px 0 118px;
  }


  .delet {
    width: 50px;
    height: 50px;
    text-align: center;
    line-height: 50px;
    position: absolute;
    right: 114px;
    top: 0px;
    font-size: 25px;
    color: #fff;
    cursor: pointer;
  }

  .jump_info {
    width: 20px;
    height: 20px;
    position: absolute;
    right: 35px;
    top: 6px;
    z-index: 99;
  }

  .toolbar-bot .el-pagination {
    float: right;
  }
</style>